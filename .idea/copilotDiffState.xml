<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/masum/learning/Learnings/FontStyles.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/masum/learning/Learnings/FontStyles.kt" />
              <option name="originalContent" value="package com.masum.learning&#10;&#10;import android.R.attr.fontFamily&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.text.SpanStyle&#10;import androidx.compose.ui.text.TextStyle&#10;import androidx.compose.ui.text.buildAnnotatedString&#10;import androidx.compose.ui.text.font.Font&#10;import androidx.compose.ui.text.font.FontFamily&#10;import androidx.compose.ui.text.font.FontStyle&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.text.style.TextDecoration&#10;import androidx.compose.ui.text.withStyle&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.sp&#10;&#10;@Composable&#10;fun fontStyle(modifier: Modifier = Modifier) {&#10;            Box( modifier = Modifier&#10;                .fillMaxSize()&#10;                .background(Color(0xFF121212)),&#10;                contentAlignment = Alignment.Center&#10;            ) {&#10;                Text(&#10;                    text = buildAnnotatedString {&#10;                        withStyle(&#10;                            style = SpanStyle (&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp&#10;                            )&#10;                        ) {&#10;                            append(&quot;W&quot;)&#10;                        }&#10;                        append(&quot;hy&quot;)&#10;                        withStyle(&#10;                            style = SpanStyle (&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp&#10;                            )&#10;                        ) {&#10;                            append(&quot;T&quot;)&#10;                        }&#10;                        append(&quot;he &quot;)&#10;                        withStyle(&#10;                            style = SpanStyle (&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp&#10;                            )&#10;                        ) {&#10;                            append(&quot;H&quot;)&#10;                        }&#10;                        append(&quot;ell &quot;)&#10;                        withStyle(&#10;                            style = SpanStyle (&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp&#10;                            )&#10;                        ) {&#10;                            append(&quot;I &quot;)&#10;                        }&#10;                        withStyle(&#10;                            style = SpanStyle (&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp&#10;                            )&#10;                        ) {&#10;                            append(&quot;A&quot;)&#10;                        }&#10;                        append(&quot;m &quot;)&#10;                        withStyle(&#10;                            style = SpanStyle (&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp&#10;                            )&#10;                        ) {&#10;                            append(&quot;D&quot;)&#10;                        }&#10;                        append(&quot;oing &quot;)&#10;                        withStyle(&#10;                            style = SpanStyle (&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp&#10;                            )&#10;                        ) {&#10;                            append(&quot;T&quot;)&#10;                        }&#10;                        append(&quot;his!&quot;)&#10;                    },&#10;                    color = Color.Cyan,&#10;                    fontSize = 40.sp,&#10;                    style = TextStyle(&#10;                        fontFamily = fontFamily,&#10;                        fontWeight = FontWeight.Bold,&#10;                        fontStyle = FontStyle.Italic,&#10;                        textAlign = TextAlign.Center&#10;                    )&#10;                )&#10;            }&#10;    }&#10;" />
              <option name="updatedContent" value="package com.masum.learning&#10;&#10;import android.R.attr.fontFamily&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.text.SpanStyle&#10;import androidx.compose.ui.text.TextStyle&#10;import androidx.compose.ui.text.buildAnnotatedString&#10;import androidx.compose.ui.text.font.Font&#10;import androidx.compose.ui.text.font.FontFamily&#10;import androidx.compose.ui.text.font.FontStyle&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.text.style.TextDecoration&#10;import androidx.compose.ui.text.withStyle&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.sp&#10;&#10;@Composable&#10;fun fontStyle(modifier: Modifier = Modifier) {&#10;            Box( modifier = Modifier&#10;                .fillMaxSize()&#10;                .background(Color(0xFF121212)),&#10;                contentAlignment = Alignment.Center&#10;            ) {&#10;                Text(&#10;                    text = buildAnnotatedString {&#10;                        withStyle(&#10;                            style = SpanStyle(&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp,&#10;                                fontFamily = FontFamily.Serif, // Example, replace with your custom font if needed&#10;                                fontWeight = FontWeight.Bold,&#10;                                fontStyle = FontStyle.Italic&#10;                            )&#10;                        ) {&#10;                            append(&quot;W&quot;)&#10;                        }&#10;                        append(&quot;hy&quot;)&#10;                        withStyle(&#10;                            style = SpanStyle(&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp,&#10;                                fontFamily = FontFamily.Serif,&#10;                                fontWeight = FontWeight.Bold,&#10;                                fontStyle = FontStyle.Italic&#10;                            )&#10;                        ) {&#10;                            append(&quot;T&quot;)&#10;                        }&#10;                        append(&quot;he &quot;)&#10;                        withStyle(&#10;                            style = SpanStyle(&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp,&#10;                                fontFamily = FontFamily.Serif,&#10;                                fontWeight = FontWeight.Bold,&#10;                                fontStyle = FontStyle.Italic&#10;                            )&#10;                        ) {&#10;                            append(&quot;H&quot;)&#10;                        }&#10;                        append(&quot;ell &quot;)&#10;                        withStyle(&#10;                            style = SpanStyle(&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp,&#10;                                fontFamily = FontFamily.Serif,&#10;                                fontWeight = FontWeight.Bold,&#10;                                fontStyle = FontStyle.Italic&#10;                            )&#10;                        ) {&#10;                            append(&quot;I &quot;)&#10;                        }&#10;                        withStyle(&#10;                            style = SpanStyle(&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp,&#10;                                fontFamily = FontFamily.Serif,&#10;                                fontWeight = FontWeight.Bold,&#10;                                fontStyle = FontStyle.Italic&#10;                            )&#10;                        ) {&#10;                            append(&quot;A&quot;)&#10;                        }&#10;                        append(&quot;m &quot;)&#10;                        withStyle(&#10;                            style = SpanStyle(&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp,&#10;                                fontFamily = FontFamily.Serif,&#10;                                fontWeight = FontWeight.Bold,&#10;                                fontStyle = FontStyle.Italic&#10;                            )&#10;                        ) {&#10;                            append(&quot;D&quot;)&#10;                        }&#10;                        append(&quot;oing &quot;)&#10;                        withStyle(&#10;                            style = SpanStyle(&#10;                                color = Color.Green,&#10;                                fontSize = 50.sp,&#10;                                fontFamily = FontFamily.Serif,&#10;                                fontWeight = FontWeight.Bold,&#10;                                fontStyle = FontStyle.Italic&#10;                            )&#10;                        ) {&#10;                            append(&quot;T&quot;)&#10;                        }&#10;                        append(&quot;his!&quot;)&#10;                    },&#10;                    color = Color.Cyan,&#10;                    fontSize = 40.sp,&#10;                    textAlign = TextAlign.Center&#10;                )&#10;            }&#10;    }" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/masum/learning/Learnings/States.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/masum/learning/Learnings/States.kt" />
              <option name="originalContent" value="package com.masum.learning&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.clickable&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.Column&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.mutableStateOf&#10;import androidx.compose.runtime.remember&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.text.SpanStyle&#10;import androidx.compose.ui.text.buildAnnotatedString&#10;import androidx.compose.ui.text.font.Font&#10;import androidx.compose.ui.text.font.FontFamily&#10;import androidx.compose.ui.text.font.FontStyle&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.text.style.TextDecoration&#10;import androidx.compose.ui.text.withStyle&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.sp&#10;import kotlin.random.Random&#10;&#10;@Composable&#10;fun ColorBox(color: Color, updateColor: (Color) -&gt; Unit, modifier: Modifier = Modifier) {&#10;    Box(&#10;        modifier = modifier&#10;            .fillMaxSize()&#10;            .background(color)&#10;            .clickable {&#10;                updateColor(&#10;                    Color(&#10;                        Random.nextFloat(),&#10;                        Random.nextFloat(),&#10;                        Random.nextFloat(),&#10;                        alpha = 1f&#10;                    )&#10;                )&#10;            }&#10;    )&#10;}" />
              <option name="updatedContent" value="package com.masum.learning&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.clickable&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.Column&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.mutableStateOf&#10;import androidx.compose.runtime.remember&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.text.SpanStyle&#10;import androidx.compose.ui.text.buildAnnotatedString&#10;import androidx.compose.ui.text.font.Font&#10;import androidx.compose.ui.text.font.FontFamily&#10;import androidx.compose.ui.text.font.FontStyle&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.text.style.TextDecoration&#10;import androidx.compose.ui.text.withStyle&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.sp&#10;import kotlin.random.Random&#10;&#10;@Composable&#10;fun StatesScreen() {&#10;    Column(Modifier.fillMaxSize()) {&#10;        val color = remember { mutableStateOf(Color.Cyan) }&#10;        ColorBox(&#10;            modifier = Modifier&#10;                .fillMaxSize()&#10;                .weight(1f),&#10;            color = color.value,&#10;            updateColor = { color.value = it }&#10;        )&#10;        Box(&#10;            modifier = Modifier&#10;                .background(color.value)&#10;                .weight(1f)&#10;                .fillMaxSize()&#10;        )&#10;    }&#10;}&#10;&#10;@Composable&#10;fun ColorBox(&#10;    modifier: Modifier = Modifier,&#10;    color: Color,&#10;    updateColor: (Color) -&gt; Unit&#10;) {&#10;    Box(&#10;        modifier = modifier&#10;            .background(color)&#10;            .background(Color.Red)&#10;            .clickable {&#10;                updateColor(&#10;                    Color(&#10;                        Random.nextFloat(),&#10;                        Random.nextFloat(),&#10;                        Random.nextFloat(),&#10;                        alpha = 1f&#10;                    )&#10;                )&#10;            }&#10;    )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/masum/learning/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/masum/learning/MainActivity.kt" />
              <option name="originalContent" value="package com.masum.learning&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.clickable&#10;import androidx.compose.foundation.layout.Box&#10;import androidx.compose.foundation.layout.Column&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.mutableStateOf&#10;import androidx.compose.runtime.remember&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.text.SpanStyle&#10;import androidx.compose.ui.text.buildAnnotatedString&#10;import androidx.compose.ui.text.font.Font&#10;import androidx.compose.ui.text.font.FontFamily&#10;import androidx.compose.ui.text.font.FontStyle&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.text.style.TextDecoration&#10;import androidx.compose.ui.text.withStyle&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.sp&#10;import androidx.compose.runtime.getValue&#10;import androidx.compose.runtime.setValue&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContent {&#10;            var color by remember { mutableStateOf(Color.Cyan) }&#10;            ColorBox(color = color, updateColor = { color = it })&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.masum.learning&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import com.masum.learning.Learnings.StatesScreen&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContent {&#10;            StatesScreen()&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>