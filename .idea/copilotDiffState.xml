<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/masum/learning/Learnings/Snackbar.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/masum/learning/Learnings/Snackbar.kt" />
              <option name="originalContent" value="package com.masum.learning.Learnings&#10;&#10;import androidx.compose.foundation.layout.Arrangement&#10;import androidx.compose.foundation.layout.Column&#10;import androidx.compose.foundation.layout.Spacer&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.foundation.layout.fillMaxWidth&#10;import androidx.compose.foundation.layout.height&#10;import androidx.compose.foundation.layout.padding&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.SnackbarHost&#10;import androidx.compose.material3.SnackbarHostState&#10;import androidx.compose.material3.Text&#10;import androidx.compose.material3.TextField&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.mutableStateOf&#10;import androidx.compose.runtime.*&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.unit.dp&#10;import kotlinx.coroutines.launch&#10;&#10;@Composable&#10;fun Snackbar(modifier: Modifier = Modifier) {&#10;    val snackbarHostState = remember { SnackbarHostState() }&#10;    var textFieldState by remember {&#10;        mutableStateOf(&quot;&quot;)&#10;    }&#10;    val scope = rememberCoroutineScope()&#10;    Scaffold(&#10;        modifier = modifier.fillMaxSize(),&#10;        snackbarHost = { SnackbarHost(hostState = snackbarHostState) }&#10;    ) { paddingValues -&gt;&#10;        Column (&#10;            horizontalAlignment = Alignment.CenterHorizontally,&#10;            verticalArrangement = Arrangement.Center,&#10;            modifier = Modifier&#10;                .fillMaxSize()&#10;                .padding(paddingValues)&#10;                .padding(horizontal = 36.dp)&#10;        ) {&#10;            TextField(&#10;                value = textFieldState,&#10;                label = {&#10;                    Text(&quot;Enter your name&quot;)&#10;                },&#10;                onValueChange = {&#10;                    textFieldState = it&#10;                },&#10;                singleLine = true,&#10;                modifier = Modifier.fillMaxWidth()&#10;            )&#10;            Spacer(modifier = Modifier.height(16.dp))&#10;            Button(onClick = ) {&#10;                scope.launch {&#10;                    scaffoldState.snackbarHostState.showSnackbar(&quot;Hello $textFieldState&quot;)&#10;                }&#10;            }) {&#10;                Text(&quot;Greet Me&quot;)&#10;        }&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.masum.learning.Learnings&#10;&#10;import androidx.compose.foundation.layout.Arrangement&#10;import androidx.compose.foundation.layout.Column&#10;import androidx.compose.foundation.layout.Spacer&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.foundation.layout.fillMaxWidth&#10;import androidx.compose.foundation.layout.height&#10;import androidx.compose.foundation.layout.padding&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.SnackbarHost&#10;import androidx.compose.material3.SnackbarHostState&#10;import androidx.compose.material3.Text&#10;import androidx.compose.material3.TextField&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.mutableStateOf&#10;import androidx.compose.runtime.*&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.unit.dp&#10;import kotlinx.coroutines.launch&#10;&#10;@Composable&#10;fun Snackbar(modifier: Modifier = Modifier) {&#10;    val snackbarHostState = remember { SnackbarHostState() }&#10;    var textFieldState by remember { mutableStateOf(&quot;&quot;) }&#10;    val scope = rememberCoroutineScope()&#10;    Scaffold(&#10;        modifier = modifier.fillMaxSize(),&#10;        snackbarHost = { SnackbarHost(hostState = snackbarHostState) }&#10;    ) { paddingValues -&gt;&#10;        Column (&#10;            horizontalAlignment = Alignment.CenterHorizontally,&#10;            verticalArrangement = Arrangement.Center,&#10;            modifier = Modifier&#10;                .fillMaxSize()&#10;                .padding(paddingValues)&#10;                .padding(horizontal = 36.dp)&#10;        ) {&#10;            TextField(&#10;                value = textFieldState,&#10;                label = {&#10;                    Text(&quot;Enter your name&quot;)&#10;                },&#10;                onValueChange = {&#10;                    textFieldState = it&#10;                },&#10;                singleLine = true,&#10;                modifier = Modifier.fillMaxWidth()&#10;            )&#10;            Spacer(modifier = Modifier.height(16.dp))&#10;            Button(onClick = {&#10;                scope.launch {&#10;                    snackbarHostState.showSnackbar(&quot;Hello $textFieldState&quot;)&#10;                }&#10;            }) {&#10;                Text(&quot;Greet Me&quot;)&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>